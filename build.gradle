plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.flywaydb.flyway' version '11.10.0'
    id 'jacoco'
    id 'org.sonarqube' version '6.2.0.5505'
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

sonar {
  properties {
    property 'sonar.projectKey', '12SOAT_auto-repair-shop'
    property 'sonar.organization', '12soat'
    property 'sonar.host.url', 'https://sonarcloud.io'
    property 'sonar.coverage.jacoco.xmlReportPath', "${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml"
  }
}

group = 'dev.com.soat'
version = 'v1.0.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}


bootJar {
    archiveFileName = 'auto-repair-shop.jar'
}

repositories {
    mavenCentral()
}

dependencies {
    // web
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation('org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.9')

    // validation
    implementation("org.springframework.boot:spring-boot-starter-validation")

    // ops
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("io.micrometer:micrometer-registry-prometheus")

    // gson
    implementation("com.google.code.gson:gson:2.10.1")

    // database
    implementation("org.flywaydb:flyway-database-postgresql:10.20.1")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("com.h2database:h2")
    runtimeOnly("org.postgresql:postgresql")

    // security
    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation("io.jsonwebtoken:jjwt:0.12.5")

    // tools
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    compileOnly("org.projectlombok:lombok")
    annotationProcessor("org.projectlombok:lombok")

    // email
    implementation("org.springframework.boot:spring-boot-starter-mail:3.5.0")

    // test
    testImplementation("org.springframework.security:spring-security-test")
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testRuntimeOnly("org.junit.platform:junit-platform-launcher")
}

tasks.named('test') {
    useJUnitPlatform()
    systemProperty 'spring.profiles.active', 'test'
}

tasks.named("sonar").configure {
    dependsOn tasks.named("jacocoTestReport")
}
